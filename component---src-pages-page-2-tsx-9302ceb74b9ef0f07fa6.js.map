{"version":3,"sources":["webpack:///./src/pages/page-2.tsx","webpack:///./src/components/seo.tsx"],"names":["SecondPage","title","to","SEO","props","site","description","siteMetadata","defaultProps","lang","meta"],"mappings":"6FAAA,oEAeeA,UATI,kBACjB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,aACX,uDACA,gDACA,kBAAC,OAAD,CAAMC,GAAG,KAAT,8B,mQCQW,SAASC,EAAIC,GAAe,IACjCC,EADiC,OACjCA,KAcgBD,EAAME,aAAeD,EAAKE,aAAaD,YAE/D,OACE,6BACGF,EAAMH,OAKbE,EAAIK,aAAe,CACjBC,KAAM,KACNC,KAAM,GACNJ,YAAa","file":"component---src-pages-page-2-tsx-9302ceb74b9ef0f07fa6.js","sourcesContent":["import React from \"react\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst SecondPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Page two\" />\r\n    <h1>Hi from the second page</h1>\r\n    <p>Welcome to page 2</p>\r\n    <Link to=\"/\">Go back to the homepage</Link>\r\n  </Layout>\r\n)\r\n\r\nexport default SecondPage\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Helmet } from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nexport interface SeoProps{\r\n  description: string,\r\n  lang: string,\r\n  meta: object[],\r\n  title: string,\r\n}\r\n\r\nexport default function SEO(props:SeoProps){\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n  \r\n  const metaDescription = props.description || site.siteMetadata.description\r\n\r\n  return (\r\n    <div>\r\n      {props.title}\r\n    </div>\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n"],"sourceRoot":""}